generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id         String       @id @default(cuid())
  name       String?
  email      String       @unique
  password   String
  accounts   Account[]
  sessions   Session[]
  documents  Document[]
  signatures Signature[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id           String  @id @default(cuid())
  sessionToken String  @unique
  userId       String
  expires      DateTime
  user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String  @unique
  expires    DateTime
  @@unique([identifier, token])
}

model Document {
  id          String       @id @default(cuid())
  name        String
  fileKey     String
  userId      String
  status      DocStatus    @default(PENDING)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  user        User         @relation(fields: [userId], references: [id])
  signatures  Signature[]
}

enum DocStatus {
  PENDING
  SIGNED
}

model Signature {
  id           String   @id @default(cuid())
  documentId   String
  userId       String
  signatureImg String
  createdAt    DateTime @default(now())
  signedAt     DateTime?
  
  document     Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}